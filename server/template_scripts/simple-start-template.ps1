# Define the PauseScript function
Function PauseScript {
    Write-Host "Press any key to continue" -ForegroundColor Yellow
    $host.ui.RawUI.ReadKey("NoEcho,IncludeKeyDown") > $null
}

# Set the working directory to the directory where the script is located
Set-Location -Path (Get-Item $PSScriptRoot).Parent.FullName

# Acquire variable hashtable from variables.txt in the server root directory
$ExternalVariablesFile = Join-Path (Get-Item $PSScriptRoot).Parent.FullName "variables.txt"
Write-Host "Loading variables from: $ExternalVariablesFile" # Debug log

# Add check to confirm the file exists
if (!(Test-Path -Path $ExternalVariablesFile -PathType Leaf)) {
    Write-Host "Error: variables.txt file not found at: $ExternalVariablesFile"
    PauseScript
    exit 1
}

# Read and validate the content of the variables.txt file
$ExternalVariablesContent = Get-Content -raw -LiteralPath $ExternalVariablesFile
Write-Host "variables.txt content: $ExternalVariablesContent" # Debug log

try {
    $ExternalVariables = $ExternalVariablesContent | ConvertFrom-StringData
    Write-Host "Parsed variables: $($ExternalVariables | Out-String)" # Debug log
} catch {
    Write-Host "Error parsing variables.txt: $_"
    PauseScript
    exit 1
}

# Set our in-script variables from contents of variables.txt-hashtable
$MinecraftVersion = $ExternalVariables['MINECRAFT_VERSION']
$ModLoader = $ExternalVariables['MODLOADER']
$ModLoaderVersion = $ExternalVariables['MODLOADER_VERSION']
$JavaArgs = $ExternalVariables['JAVA_ARGS']
$Java = $ExternalVariables['JAVA']

Write-Host "Variables set: "
Write-Host "Minecraft Version: $MinecraftVersion"
Write-Host "Mod Loader: $ModLoader"
Write-Host "Mod Loader Version: $ModLoaderVersion"
Write-Host "Java Args: $JavaArgs"
Write-Host "Java: $Java"

# Clean up quotes from the Java and Java Args variables
$Java = $Java.Trim('"')
$JavaArgs = $JavaArgs.Trim('"')
Write-Host "Cleaned Java path: $Java"
Write-Host "Cleaned Java Args: $JavaArgs"

# Retrieve the server run command and launcher jar location from the files generated by initServer.ps1
$EZHostDirectory = Join-Path (Get-Item $PSScriptRoot).Parent.FullName "EZHost"
Write-Host "EZHost Directory: $EZHostDirectory" # Debug log

$ServerRunCommandFile = Join-Path $EZHostDirectory "server_run_command.txt"
Write-Host "Loading server run command from: $ServerRunCommandFile" # Debug log
if (!(Test-Path -Path $ServerRunCommandFile -PathType Leaf)) {
    Write-Host "Server run command file not found. Please run initServer.ps1 first."
    PauseScript
    exit 1
}
$ServerRunCommand = Get-Content -raw -LiteralPath $ServerRunCommandFile
Write-Host "Server Run Command: $ServerRunCommand"

$LauncherJarFile = Join-Path $EZHostDirectory "launcher_jar.txt"
Write-Host "Loading launcher jar location from: $LauncherJarFile" # Debug log
if (!(Test-Path -Path $LauncherJarFile -PathType Leaf)) {
    Write-Host "Launcher jar file not found. Please run initServer.ps1 first."
    PauseScript
    exit 1
}
$LauncherJarLocation = Get-Content -raw -LiteralPath $LauncherJarFile
Write-Host "Launcher Jar Location: $LauncherJarLocation"

Function Crash {
    Write-Host "Exiting..."
    PauseScript
    exit 1
}

Function global:RunJavaCommand {
    param ($CommandToRun)
    Write-Host "Running Java Command: $CommandToRun" # Debug log
    CMD /C "$CommandToRun"
    if ($LastExitCode -ne 0) {
        Write-Host "Java command failed with exit code $LastExitCode"
        Crash
    }
}

Write-Host "Starting server..."
Write-Host "Minecraft version: ${MinecraftVersion}"
Write-Host "Modloader:         ${ModLoader}"
Write-Host "Modloader version: ${ModLoaderVersion}"
if (!("${LauncherJarLocation}" -eq "do_not_manually_edit")) {
    Write-Host "Launcher JAR:      ${LauncherJarLocation}"
}
Write-Host "Java args:         ${JavaArgs}"
Write-Host "Java path:         ${Java}"
Write-Host "Run Command:       ${ServerRunCommand}"
Write-Host "Java version:"
RunJavaCommand "$Java -version"
Write-Host "Java version command executed" # Debug log

RunJavaCommand "${ServerRunCommand}"
Write-Host "Server run command executed" # Debug log

Write-Host "Exiting..."
PauseScript
exit 0
